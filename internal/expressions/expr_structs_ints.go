// Code generated by walklox/internal/tools . DO NOT EDIT.

package expressions

import "devZ/lox/internal/tokens"

type Expr interface {
	Accept(v Visitor) interface{}
}

type Visitor interface {
	VisitBinary(bi *Binary) interface{}
	VisitGrouping(gr *Grouping) interface{}
	VisitLiteral(li *Literal) interface{}
	VisitUnary(un *Unary) interface{}
}

type Binary struct {
	Left     Expr
	Operator *tokens.Token
	Right    Expr
}

type Grouping struct {
	Expression Expr
}

type Literal struct {
	Value interface{}
}

type Unary struct {
	Operator *tokens.Token
	Right    Expr
}

func (bi *Binary) Accept(v Visitor) interface{} {
	return v.VisitBinary(bi)
}

func (gr *Grouping) Accept(v Visitor) interface{} {
	return v.VisitGrouping(gr)
}

func (li *Literal) Accept(v Visitor) interface{} {
	return v.VisitLiteral(li)
}

func (un *Unary) Accept(v Visitor) interface{} {
	return v.VisitUnary(un)
}
