// Code generated by walklox/internal/tools . DO NOT EDIT.

package statements

import (
	"devZ/lox/internal/expressions"
)

type Stmt interface {
	Accept(v Visitor)
}

type Visitor interface {
	VisitExpression(expst *Expression)
	VisitPrint(prnst *Print)
}

type Expression struct {
	expression expressions.Expr
}

type Print struct {
	expression expressions.Expr
}

func (expst *Expression) Accept(v Visitor) {
	v.VisitExpression(expst)
}

func (expst *Expression) Expression() expressions.Expr {
	return expst.expression
}

func (expst *Expression) SetExpression(ex expressions.Expr) {
	expst.expression = ex
}

func (prnst *Print) Accept(v Visitor) {
	v.VisitPrint(prnst)
}

func (prnst *Print) Expression() expressions.Expr {
	return prnst.expression
}

func (prnst *Print) SetExpression(ex expressions.Expr) {
	prnst.expression = ex
}

func NewExpression(ex expressions.Expr) *Expression {
	return &Expression{
		expression: ex,
	}
}

func NewPrint(ex expressions.Expr) *Print {
	return &Print{
		expression: ex,
	}
}
